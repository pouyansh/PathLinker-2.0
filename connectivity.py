import networkx as nx

from file_methods import read_source_and_destinations, read_nodes

datas = ["Alpha6Beta4Integrin", "AndrogenReceptor", "BCR", "BDNF", "CRH", "EGFR1", "FSH", "Hedgehog", "IL1",
         "IL2", "IL3", "IL4", "IL5", "IL6", "IL9", "IL-7", "KitReceptor", "Leptin", "Notch", "Oncostatin_M",
         "Prolactin", "RANKL", "TCR", "TGF_beta_Receptor", "TNFalpha", "TSH", "TSLP", "TWEAK", "Wnt"]

# defining the bounds for which we want to compute the connectivity
bounds = [10000, 25000, 50000]

for data in datas:
    our_pathway = "results/" + data + "edges-ours.txt"

    rtf_path = "data/NetPath/" + data + "-nodes.txt"
    nodes = read_nodes("data/nodes_map.txt")
    # reading seeds and targets
    seeds, targets = read_source_and_destinations(rtf_path, nodes)

    # defining a graph for each bound
    G = [nx.Graph() for _ in range(len(bounds))]

    # reading the pathway generated by our algorithm
    edges = []
    with open(our_pathway, 'r') as f:
        for line in f:
            sp = line.split()
            edges.append([sp[0], sp[1]])

    for i, bound in bounds:
        for j in range(bound):
            G[i].add_edge(edges[i][0], edges[i][1])





